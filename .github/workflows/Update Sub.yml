name: Update Sub

on:
  workflow_dispatch:
  schedule:
    - cron: "5 0 * * *"

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install pyyaml requests

      - name: Fetch and update sayuri.yaml
        run: |
          python <<'EOF'
          import requests, yaml, re

          # 获取最新 sayuri.yaml
          base_url = "https://raw.githubusercontent.com/godlikeanyone/Stash/refs/heads/main/sayuri.yaml"
          base_resp = requests.get(base_url, timeout=10)
          base_resp.raise_for_status()
          config = yaml.safe_load(base_resp.text)

          # 获取订阅
          sub_url = "https://cfxr.eu.org/getSub"
          resp = requests.get(sub_url, timeout=10)
          subs = resp.text.strip().splitlines()

          # 解析 vless 链接
          parsed = []
          for line in subs:
              if line.startswith("vless://"):
                  m = re.match(r"vless://([^@]+)@([^:]+):(\d+)\?(.+)#(.+)", line)
                  if not m: 
                      continue
                  uuid, server, port, params, name = m.groups()
                  opts = dict([p.split("=",1) for p in params.split("&") if "=" in p])

                  proxy = {
                      "server": server,
                      "port": int(port),
                      "type": "vless",
                      "uuid": uuid,
                      "tls": opts.get("security") == "tls",
                      "tfo": False,
                      "skip-cert-verify": False,
                      "client-fingerprint": "chrome",
                  }
                  if opts.get("type") == "ws":
                      proxy["network"] = "ws"
                      proxy["ws-opts"] = {
                          "path": opts.get("path","/"),
                          "headers": {"Host": opts.get("host", server)}
                      }
                  parsed.append(proxy)

          # 取前两个，如果不足两个则复制第一个
          if len(parsed) == 0:
              raise SystemExit("订阅里没有 vless 节点！")
          elif len(parsed) == 1:
              nodes = [parsed[0], parsed[0].copy()]
          else:
              nodes = parsed[:2]

          # 替换 proxies 里 Snippets 节点
          new_proxies = []
          for p in config.get("proxies", []):
              if p.get("name") == "🌐全球智能路由 - Snippets":
                  new_proxies.append({"name": "🌐全球智能路由 - Snippets", **nodes[0]})
              elif p.get("name") == "🌐全球智能路由 - Snippets2":
                  new_proxies.append({"name": "🌐全球智能路由 - Snippets2", **nodes[1]})
              else:
                  new_proxies.append(p)

          config["proxies"] = new_proxies

          # 写回文件
          with open("sayuri.yaml", "w", encoding="utf-8") as f:
              yaml.dump(config, f, allow_unicode=True, sort_keys=False)

          EOF

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add sayuri.yaml
          git commit -m "Replace Snippets nodes with latest vless" || echo "No changes"
          git push
